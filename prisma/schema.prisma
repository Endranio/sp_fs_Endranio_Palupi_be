// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generate/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum taskStatus {
  Todo
  OnProgress
  Done
}

enum memberRole {
  Member
  Owner
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String  
  projects  Project[]
  members   Membership[]
  tasks     Task[]

}

model Project {
  id       String     @id @default(uuid())
  name     String
  description String 
  owner     User       @relation( fields: [ownerId] , references: [id])
  ownerId  String 
  members  Membership[]   
  task     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

}

model Membership {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String    
  project   Project       @relation(fields: [projectId],references: [id])
  projectId String
  role      memberRole    @default(Member)

  @@unique([userId, projectId])
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String
  status      taskStatus @default(Todo)
  project     Project  @relation(fields: [projectId],references: [id])
  projectId   String 
  assignee    User   @relation(fields: [assignedId],references: [id])
  assignedId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

}